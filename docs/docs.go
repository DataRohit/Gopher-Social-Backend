// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Rohit Vilas Ingole",
            "email": "rohit.vilas.ingole@gmail.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/DataRohit/Gopher-Social-Backend/blob/master/license"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health/redis": {
            "get": {
                "description": "Check if Redis connection is healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Redis Health Check",
                "responses": {
                    "200": {
                        "description": "Successfully connected to Redis",
                        "schema": {
                            "$ref": "#/definitions/models.RedisHealthyResponse"
                        }
                    },
                    "503": {
                        "description": "Failed to connect to Redis",
                        "schema": {
                            "$ref": "#/definitions/models.RedisUnhealthyResponse"
                        }
                    }
                }
            }
        },
        "/health/router": {
            "get": {
                "description": "Check if the router is working",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Router Health Check",
                "responses": {
                    "200": {
                        "description": "Successfully connected to router",
                        "schema": {
                            "$ref": "#/definitions/models.RouterHealthyResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.RedisHealthyResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "Redis Healthy!"
                }
            }
        },
        "models.RedisUnhealthyResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "Redis Unhealthy!"
                }
            }
        },
        "models.RouterHealthyResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "Router Healthy!"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Gopher Social API",
	Description:      "This is the API for Gopher Social, a social media platform for Gophers.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
