basePath: /api/v1
definitions:
  models.PostgresHealthyResponse:
    properties:
      status:
        example: Postgres Healthy!
        type: string
    type: object
  models.PostgresUnhealthyResponse:
    properties:
      status:
        example: Postgres Unhealthy!
        type: string
    type: object
  models.RedisHealthyResponse:
    properties:
      status:
        example: Redis Healthy!
        type: string
    type: object
  models.RedisUnhealthyResponse:
    properties:
      status:
        example: Redis Unhealthy!
        type: string
    type: object
  models.RouterHealthyResponse:
    properties:
      status:
        example: Router Healthy!
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: rohit.vilas.ingole@gmail.com
    name: Rohit Vilas Ingole
  description: This is the API for Gopher Social, a social media platform for Gophers.
  license:
    name: MIT License
    url: https://github.com/DataRohit/Gopher-Social-Backend/blob/master/license
  title: Gopher Social API
  version: "1.0"
paths:
  /health/postgres:
    get:
      description: Check if Postgres connection is healthy
      produces:
      - application/json
      responses:
        "200":
          description: Successfully connected to Postgres
          schema:
            $ref: '#/definitions/models.PostgresHealthyResponse'
        "503":
          description: Failed to connect to Postgres
          schema:
            $ref: '#/definitions/models.PostgresUnhealthyResponse'
      summary: Postgres Health Check
      tags:
      - health
  /health/redis:
    get:
      description: Check if Redis connection is healthy
      produces:
      - application/json
      responses:
        "200":
          description: Successfully connected to Redis
          schema:
            $ref: '#/definitions/models.RedisHealthyResponse'
        "503":
          description: Failed to connect to Redis
          schema:
            $ref: '#/definitions/models.RedisUnhealthyResponse'
      summary: Redis Health Check
      tags:
      - health
  /health/router:
    get:
      description: Check if the router is working
      produces:
      - application/json
      responses:
        "200":
          description: Successfully connected to router
          schema:
            $ref: '#/definitions/models.RouterHealthyResponse'
      summary: Router Health Check
      tags:
      - health
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
